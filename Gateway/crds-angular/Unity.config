<!--Documentation: http://msdn.microsoft.com/en-us/library/ff660914%28v=pandp.20%29.aspx -->
<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <assembly name="crds-angular" />
  <assembly name="Crossroads.Utilities" />
  <assembly name="MinistryPlatform.Translation" />
  <assembly name="RestSharp" />
  <assembly name="System.Messaging" />
  <assembly name="System.Security.Cryptography" />

  <container>
    <!-- Register Angular REST Endpoint Dependencies -->
    <register type="crds_angular.Services.Interfaces.ITripService" mapTo="crds_angular.Services.TripService" />    
    <register type="crds_angular.Services.Interfaces.IVolunteerApplicationService" mapTo="crds_angular.Services.VolunteerApplicationService" />    
    <register type="crds_angular.Services.Interfaces.IPersonService" mapTo="crds_angular.Services.PersonService" />
    <register type="crds_angular.Services.Interfaces.IServeService" mapTo="crds_angular.Services.ServeService" />
    <register type="crds_angular.Services.Interfaces.IAccountService" mapTo="crds_angular.Services.AccountService" />
    <register type="crds_angular.Services.Interfaces.IDonorService" mapTo="crds_angular.Services.DonorService" />
    <register type="crds_angular.Services.Interfaces.IEmailCommunication" mapTo="crds_angular.Services.EmailCommunication" />
    <register type="crds_angular.Services.Interfaces.IDonationService" mapTo="crds_angular.Services.DonationService" />
    <register type="crds_angular.Services.Interfaces.IProgramService" mapTo="crds_angular.Services.ProgramService" />
    <register type="crds_angular.Services.Interfaces.ICheckScannerService" mapTo="crds_angular.Services.EzScanCheckScannerService">
      <constructor>
        <param name="dbConnection">
          <value value="EzScanDatabase" typeConverter="Crossroads.Utilities.Services.DbConnectionNameTypeConverter" />
        </param>
        <param name="donorService" />
        <param name="paymentService" />
        <param name="mpDonorService" />
      </constructor>
    </register>

    <register type="crds_angular.Services.Interfaces.IPaymentService" mapTo="crds_angular.Services.StripeService">
      <constructor>
        <param name="stripeRestClient">
          <dependency name="stripeRestClient" />
        </param>
        <param name="configuration">
          <dependency type="Crossroads.Utilities.Interfaces.IConfigurationWrapper"/>
        </param>
        <param name="contentBlockService">
          <dependency type="Crossroads.Utilities.Interfaces.IContentBlockService"/>
        </param>
      </constructor>
    </register>
    <register type="crds_angular.Services.Interfaces.IGroupService" mapTo="crds_angular.Services.GroupService" />
    <register type="crds_angular.Services.Interfaces.IStripeEventService" mapTo="crds_angular.Services.StripeEventService" />

    <register name="stripeRestClient" type="RestSharp.IRestClient" mapTo="RestSharp.RestClient">
      <constructor>
        <param name="baseUrl" type="string">
          <value value="PaymentClient" typeConverter="Crossroads.Utilities.Services.AppSettingsTypeConverter" />
        </param>
      </constructor>
      <property name="Authenticator" dependencyName="stripeAuthenticator" />
    </register>
    <register name="stripeAuthenticator" type="RestSharp.IAuthenticator" mapTo="RestSharp.HttpBasicAuthenticator">
      <constructor>
        <param name="username">
          <value value="STRIPE_AUTH_TOKEN"
                 typeConverter="Crossroads.Utilities.Services.EnvironmentVariableTypeConverter" />
        </param>
        <!-- TODO I really need to set this to null, but Unity doesn't like that, so sending spaces for now -->
        <param name="password" value="  " />
      </constructor>
    </register>

    <register type="Crossroads.Utilities.Messaging.Interfaces.IMessageQueueFactory" mapTo="Crossroads.Utilities.Messaging.MessageQueueFactory"/>
    <register type="Crossroads.Utilities.Messaging.Interfaces.IMessageFactory" mapTo="Crossroads.Utilities.Messaging.MessageFactory"/>

    <!-- Register Ministry Platform Translation Dependencies -->
    <register type="MinistryPlatform.Translation.Services.Interfaces.IGroupService"
              mapTo="MinistryPlatform.Translation.Services.GroupService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IGroupParticipantService"
              mapTo="MinistryPlatform.Translation.Services.GroupParticipantService">
      <constructor>
        <param name="dbConnection">
          <value value="MinistryPlatformDatabase"
                 typeConverter="MinistryPlatform.Translation.Utils.DbConnectionNameTypeConverter" />
        </param>
        <param name="configurationWrapper">
          <dependency type="Crossroads.Utilities.Interfaces.IConfigurationWrapper"/>
        </param>
      </constructor>
    </register>
    <register type="MinistryPlatform.Translation.Services.Interfaces.IEventService" mapTo="MinistryPlatform.Translation.Services.EventService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IEventParticipantService" mapTo="MinistryPlatform.Translation.Services.EventParticipantService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IMinistryPlatformService" mapTo="MinistryPlatform.Translation.Services.MinistryPlatformServiceImpl" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IAuthenticationService" mapTo="MinistryPlatform.Translation.Services.AuthenticationServiceImpl" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IContactService" mapTo="MinistryPlatform.Translation.Services.ContactService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IContactRelationshipService" mapTo="MinistryPlatform.Translation.Services.ContactRelationshipService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IOpportunityService" mapTo="MinistryPlatform.Translation.Services.OpportunityServiceImpl" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IContactRelationshipService" mapTo="MinistryPlatform.Translation.Services.ContactRelationshipService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IParticipantService" mapTo="MinistryPlatform.Translation.Services.ParticipantService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IProgramService" mapTo="MinistryPlatform.Translation.Services.ProgramService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IDonorService" mapTo="MinistryPlatform.Translation.Services.DonorService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IContactRelationshipService" mapTo="MinistryPlatform.Translation.Services.ContactRelationshipService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.ICommunicationService" mapTo="MinistryPlatform.Translation.Services.CommunicationService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.ICampaignService" mapTo="MinistryPlatform.Translation.Services.CampaignService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IFormSubmissionService"
              mapTo="MinistryPlatform.Translation.Services.FormSubmissionService">
      <constructor>
        <param name="ministryPlatformService">
          <dependency type="MinistryPlatform.Translation.Services.Interfaces.IMinistryPlatformService"/>
        </param>
        <param name="dbConnection">
          <value value="MinistryPlatformDatabase"
                 typeConverter="MinistryPlatform.Translation.Utils.DbConnectionNameTypeConverter" />
        </param>
        <param name="authenticationService">
          <dependency type="MinistryPlatform.Translation.Services.Interfaces.IAuthenticationService"/>
        </param>
        <param name="configurationWrapper">
          <dependency type="Crossroads.Utilities.Interfaces.IConfigurationWrapper"/>
        </param>
      </constructor>
    </register>
    <register type="MinistryPlatform.Translation.Services.Interfaces.IDonationService" mapTo="MinistryPlatform.Translation.Services.DonationService" />
    <register type="MinistryPlatform.Translation.Services.Interfaces.IPledgeService" mapTo="MinistryPlatform.Translation.Services.PledgeService" />

    <!-- Register Utility Dependencies -->
    <register type="Crossroads.Utilities.Interfaces.IConfigurationWrapper"
              mapTo="Crossroads.Utilities.Services.ConfigurationWrapper" />
    <register type="Crossroads.Utilities.Interfaces.IContentBlockService"
              mapTo="Crossroads.Utilities.Services.ContentBlockService">
      <lifetime type="ContainerControlledLifetimeManager"/>
      <constructor>
        <param name="cmsRestClient">
          <dependency name="cmsRestClient"/>
        </param>
      </constructor>
    </register>
    <register name="cmsRestClient" type="RestSharp.IRestClient" mapTo="RestSharp.RestClient">
      <constructor>
        <param name="baseUrl" type="string">
          <value value="CRDS_CMS_ENDPOINT" typeConverter="Crossroads.Utilities.Services.EnvironmentVariableTypeConverter" />
        </param>
      </constructor>
    </register>
    <register type="Crossroads.Utilities.Interfaces.ICryptoProvider"
              mapTo="Crossroads.Utilities.Services.TripleDesSymmetricKeyCryptoProvider">
      <constructor>
        <param name="base64EncodedKey">
          <value value="EZSCAN_DB_SECRET_KEY" typeConverter="Crossroads.Utilities.Services.EnvironmentVariableTypeConverter" />
        </param>
        <param name="cipherMode">
          <value value="ECB" typeConverter="Crossroads.Utilities.Services.EnumTypeConverter[System.Security.Cryptography.CipherMode]" />
        </param>
        <param name="paddingMode">
          <value value="PKCS7"  typeConverter="Crossroads.Utilities.Services.EnumTypeConverter[System.Security.Cryptography.PaddingMode]"/>
        </param>
      </constructor>
    </register>

    <!-- Register a per-resolve MP PlatformServiceClient -->
    <register type="MinistryPlatform.Translation.PlatformService.PlatformServiceClient">
      <lifetime type="PerResolveLifetimeManager" />
      <constructor></constructor>
    </register>
  </container>
</unity>
